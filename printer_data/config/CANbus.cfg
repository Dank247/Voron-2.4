# This file contains common pin mappings for the BIGTREETECH EBBCan
# The "EBB" micro-controller will be used to control the components on the nozzle.

# See docs/Config_Reference.md for a description of parameters.

[mcu EBBCan]
# serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_15003D000F50535556323420-if00
canbus_uuid: 2c1c6d5f12e8 # run the following command to locate the uuid >   ~/klippy-env/bin/python ~/klipper/scripts/canbus_query.py can0


##--------------------------------------------------------------------
[board_pins EBB36_G0B1_v1.2]
mcu: EBBCan
aliases:
aliases_step:
    EXT_EN=PD2,EXT_STEP=PD0,EXT_DIR=PD1,EXT_UART=PA15
aliases_limitsw: # these are preferred for endstops (including klicky)
    LIMIT_1=PB7,LIMIT_2=PB5,LIMIT_3=PB6
aliases_bltouch: # these are the dupont connectors for bltouch
    PROBE_1=PB9,PROBE_2=PB8
aliases_fans:
    FAN0=PA1,FAN1=PA0
aliases_thermistors:
    TH0=PA3,PT1000_CS=PA4,PT1000_SCLK=PA5,PT1000_MISO=PA6,PT1000_MOSI=PA7
aliases_heaters:
    HE0=PB13
aliases_rgb:
    RGBLED=PD3
aliases_adxl:
    ADXL_CS=PB12,ADXL_SCLK=PB10,ADXL_MISO=PB2,ADXL_MOSI=PB11
aliases_i2c:
    AUX0=PB3,AUX1=PB4

[temperature_sensor EBBCan]
sensor_type: temperature_mcu
sensor_mcu: EBBCan
    
[adxl345]
cs_pin: EBBCan:ADXL_CS
spi_software_sclk_pin: EBBCan:ADXL_SCLK
spi_software_mosi_pin: EBBCan:ADXL_MOSI
spi_software_miso_pin: EBBCan:ADXL_MISO
axis_map: x,y,z

[resonance_tester]
accel_chip: adxl345
probe_points:
    150, 150, 20  # 300mm V2.4

#  Connected to MOTOR_6
[extruder]
step_pin: EBBCan:EXT_STEP
dir_pin: EBBCan:EXT_DIR
enable_pin: !EBBCan:EXT_EN
rotation_distance: 4.637
microsteps: 16
full_steps_per_rotation: 200
nozzle_diameter: 0.4
filament_diameter: 1.75
heater_pin: EBBCan:PB13
control=pid
pid_Kp=33.320
pid_Ki=4.443
pid_Kd=62.476
min_temp: 0
max_temp: 300
max_power: 1.0
min_extrude_temp: 170
max_extrude_only_distance: 500
max_extrude_cross_section: 5
pressure_advance: 0.025 
pressure_advance_smooth_time: 0.03

sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: EBBCan: PA3
# spi_bus: spi1
# spi_software_sclk_pin: EBBCan: PA5
# spi_software_mosi_pin: EBBCan: PA7
# spi_software_miso_pin: EBBCan: PA6
# rtd_nominal_r: 100
# rtd_reference_r: 430
# rtd_num_of_wires: 2
# rtd_use_50Hz_filter: True

##  E0 on MOTOR6
[tmc2209 extruder]
uart_pin: EBBCan:EXT_UART
interpolate: true
run_current: 0.78
sense_resistor: 0.110
stealthchop_threshold: 0

[fan]
##  Print Cooling Fan - FAN0
pin: EBBCan:FAN0
kick_start_time: 0.5
off_below: 0.10

[heater_fan hotend_fan]
##  Hotend Fan - FAN1
pin: EBBCan:FAN1
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0

## Voron CNC_TAP ## 
[probe]
pin: ^EBBCan:PB9
x_offset: 0
y_offset: 0
speed: 6.0
samples: 3
samples_result: median
sample_retract_dist: 1.0
samples_tolerance: 0.006
samples_tolerance_retries: 3

activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}
    
